<style>
    /* mobile first  */
    .image-text-container{
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
    .image-text-inner-container {
        display:grid;
        grid-template-columns: 1fr;
        grid-template-rows: auto ; 
        grid-template-areas: "marged-box";
        margin: 10px 0px 10px 0px;                  
    }
    
    /* text  */
    .image-text-inner-container .left-text-box,
    .image-text-inner-container .right-text-box {
        z-index: 1;
        grid-area: marged-box;
        place-self: center;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 50px 20px 50px 20px;
        background-color: rgba(var(--color-palette-1-rgb),0.8);
        color: var(--color-text-light);
        border-radius: 5px;
        
        height: 80%;
        opacity: 0;

        /* opacity: 0;
        
        transform: translateY(30%);
        transition: 1s ease-in; */
    }
    .image-text-inner-container .left-text-box h2,
    .image-text-inner-container .right-text-box h2 {
        color: inherit;
    }


    /* image */
    .image-text-inner-container .left-image-box,
    .image-text-inner-container .right-image-box {
        grid-area: marged-box;
        
     
    }

    .image-text-inner-container .left-image-box img,
    .image-text-inner-container .right-image-box img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 5px;
    }
    /* left position  */
    .image-text-inner-container .left-text-box,
    .image-text-inner-container .left-image-box {
        justify-self: start;
        width: 90%;
        
    }
    /* right position  */
    .image-text-inner-container .right-text-box,
    .image-text-inner-container .right-image-box {
        justify-self: end;
        width: 90%;
    }

    /* animation */

    /* .image-text-inner-container:hover .left-text-box,
    .image-text-inner-container:hover .right-text-box{
        opacity: 1;
        animation-fill-mode: forwards;
        transform: translateY(0%);

    } */

    /* Desk top */
   @media screen and (min-width:750px) {
       .image-text-inner-container{
           display: grid;
           grid-template-columns: 1fr 1fr;
           grid-template-rows: auto ;
           grid-template-areas: "left-box right-box";
       }
       /* left position  */
       .image-text-inner-container .left-text-box,
       .image-text-inner-container .left-image-box {
           grid-area: left-box;
           width:100%

       }
       /* right position  */
       .image-text-inner-container .right-image-box,
       .image-text-inner-container .right-text-box {
           grid-area: right-box;
           width:100%
       }
       /* text-box  */
       .image-text-inner-container .left-text-box,
       .image-text-inner-container .right-text-box {
        background-color: transparent;
        color: var(--color-text-dark);
       }
       .image-text-inner-container .left-text-box h2,
       .image-text-inner-container .right-text-box h2 {
           color: var(--color-text-dark);
           margin: 20px 0 20px 0;
       }
       /* image-box */
       .image-text-inner-container .left-image-box,
       .image-text-inner-container .right-image-box {

       }
   }

    .animated-box {

    }
   /* animation fade-in  */
    .fade-in {
        animation: fade-in 2s ease-in 1s forwards;
        
    }
    @keyframes fade-in {
        0% {
            transform: translateY(30%);
            opacity: 0;
        }
        50% {
            transform: translateY(30%);
            opacity: 0;
        }
        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }

</style>

<section class="image-text-container page-width">
    {% for block in section.blocks %}
        {% case block.type %}
            {% when 'left_text' %}
            <div class="image-text-inner-container">
                <div class="left-text-box animated-box" style="animation-delay: {{ forloop.index | times: 1.5 }}s;">
                    <h2>{{ block.settings.title }}</h2>
                    <p>{{ block.settings.textarea }}</p>
                </div>
                <div class="right-image-box">
                    {% if block.settings.image != blank %}
                    <img src="{{ block.settings.image | img_url: '2048x'}}" alt="">
                    {% else %}
                    <img src="https://source.unsplash.com/collection/17" alt="">
                    {% endif %}
                   
                </div>
            </div>
                
            {% else %}
            <div class="image-text-inner-container ">
                <div class="left-image-box">
                    {% if block.settings.image != blank %}
                    <img src="{{ block.settings.image | img_url: '2048x'}}" alt="">
                    {% else %}
                    <img src="https://source.unsplash.com/collection/18" alt="">
                    {% endif %}
                </div>
                <div class="right-text-box animated-box " style="animation-delay: {{ forloop.index | times:  2}}s;">
                    <h2>{{ block.settings.title }}</h2>
                    <p>{{ block.settings.textarea }}</p>
                </div>
            </div>                
        {% endcase %}
    {% endfor %}

</section>

<script>
    // start when scroll  fade-in animation on DOM which has animated-box class 
    document.addEventListener("DOMContentLoaded", function(event) {
    document.addEventListener("scroll", function(event) {
        const animatedBoxes = document.getElementsByClassName("animated-box");
        const windowOffsetTop = window.innerHeight + window.scrollY;

        Array.prototype.forEach.call(animatedBoxes, (animatedBox) => {
            const animatedBoxOffsetTop = animatedBox.offsetTop;

            if (windowOffsetTop >= animatedBoxOffsetTop) {
                addClass(animatedBox, "fade-in");
            }
        });
    });
});

function addClass(element, className) {
    const arrayClasses = element.className.split(" ");
    if (arrayClasses.indexOf(className) === -1) {
        element.className += " " + className;
    }
}
</script>

{% schema %}

{
    "name": "Text and Image",
    "max_blocks": 6,
    "blocks": [
        {
            "type": "left_text",
            "name": "Left text right image",
            "settings": [
                {
                    "type": "text",
                    "id": "title",
                    "label": "Title",
                    "default": "Left Text Title"
                },
                {
                    "type": "textarea",
                    "id": "textarea",
                    "label": "Textarea",
                    "default": "This is example for Textarea, Write a message you want. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Dignissimos non eos consequuntur placeat quia voluptatem sequi. Aut!"
                },
                {
                    "type": "image_picker",
                    "id": "image",
                    "label": "image"
                }
            ]
        }, 
        {
            "type": "left_image",
            "name": "Left Image Right Text",
            "settings": [
                {
                    "type": "text",
                    "id": "title",
                    "label": "Title",
                    "default": "Right Text Title"
                }, {
                    "type": "textarea",
                    "id": "textarea",
                    "label": "Textarea",
                    "default": "This is example for Textarea, Write a message you want. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Dignissimos non eos consequuntur placeat quia voluptatem sequi. Aut!"
                },
                {
                    "type": "image_picker",
                    "id": "image",
                    "label": "image"
                }
            ]
        }
    ],
    "presets": [
        {
            "category": "Text and Image",
            "name": "Text and Image "
        }
    ]
}

{% endschema %}
